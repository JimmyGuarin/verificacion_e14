
GET     /commands                   controllers.api.CommandsControllerApi.allCommands
GET     /categorys                  controllers.api.CategoryControllerApi.allCategories
GET     /rankings                   controllers.api.RankingControllerApi.allRankings


# Users operations

###
# summary: Returns all users
# description: >-
#   Allows adding a new user to the system
# responses:
#   400:
#     description: User already exists
#   200:
#     description: User created successfully
###
GET     /users                      controllers.api.UserControllerApi.allUsers

###
# summary: Create user
# description: >-
#   Allows adding a new user to the system
# parameters:
#   - name: User info
#     in: body
#     schema:
#       $ref: "#/definitions/models.User"
#     required: true
# responses:
#   400:
#     description: User already exists
#   200:
#     description: User created successfully
###
POST    /users                      controllers.api.UserControllerApi.saveUser

###
# summary: Updates user
# description: >-
#   Allows updating existent user to the system
# parameters:
#   - name: User info
#     in: body
#     schema:
#       $ref: "#/definitions/models.User"
#     required: true
# responses:
#   404:
#     description: User doesn't exist
#   200:
#     description: User created successfully
###
PUT     /users                      controllers.api.UserControllerApi.updateUser

###
# summary: Returns given user
# description: >-
#   Returns given user
# parameters:
#   - name: id
#     in: path
#     description: User ID
#     required: true
#     type: integer
# responses:
#   400:
#     description: User already exists
#   200:
#     description: User information
###
GET     /users/:id                  controllers.api.UserControllerApi.getUser(id: Long)

###
# summary: Delete user
# description: >-
#   Delete given user
# parameters:
#   - name: id
#     in: path
#     description: User ID
#     required: true
#     type: integer
# responses:
#   404:
#     description: User not found or is already inactive
#   200:
#     description: User successfully deleted
###
DELETE  /users/:id                  controllers.api.UserControllerApi.deleteUser(id: Long)